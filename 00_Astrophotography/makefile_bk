export PATH := /usr/local/bin/:$(PATH)
#:で区切る
export PKG_CONFIG_PATH := /usr/local/opt/opencv@2/lib/pkgconfig:/usr/local/opt/gflags/lib/pkgconfig

INCL=-I/opt/local/include
LIBS=-L/opt/local/lib -lopencv_core -lopencv_highgui -lopencv_imgproc -lboost_program_options
test : Test.cpp
	g++ ${INCL} -o $@ Test.cpp ${LIBS}
	
nefreadertest : NEFReader_test.cpp NEFReader.cpp NEFReader.hpp dcraw_functions.h dcraw_functions.o
	g++ ${INCL} -c -o NEFReader.o NEFReader.cpp
	g++ ${INCL} -o $@ NEFReader_test.cpp NEFReader.o dcraw_functions.o ${LIBS} -ljasper -ljpeg -llcms2
	cp $@ /ws/bin/
	
dcraw_functions.o : dcraw_functions.c dcraw_functions.h
#	g++ -o $@ dcraw_functions.c
	gcc -c -o $@ -O4 dcraw_functions.c
	#  -lm  

#Dcraw.o : Dcraw.cpp Dcraw.hpp
#	gcc -c -o $@ -O4 Dcraw.cpp

FLAGS=-O3 -Wall -Wno-sign-compare -Wno-dangling-else -Wno-constant-conversion -Wno-macro-redefined
FLAGS+=-Wno-c++11-compat-deprecated-writable-strings -Wno-constant-logical-operand -Wno-string-plus-int
FLAGS+=-Wno-unused-variable

#dcrawcv.o : dcrawcv.hpp dcrawcv.cpp makefile
#	g++ ${FLAGS} ${INCL_CV} -o $@ -c dcrawcv.cpp
#dcrawcv : dcrawcvApp.cpp dcrawcv.o makefile
#	g++ ${FLAGS} ${INCL_CV} -o $@ dcrawcvApp.cpp dcrawcv.o -lm -ljasper -ljpeg -llcms2 ${LIBS}
#	cp $@ ../bin/
#	-lm -ljasper -ljpeg -llcms2 ${LIBS}
#For compilers to find this software you may need to set:
#    LDFLAGS:  -L/usr/local/opt/opencv@2/lib
#    CPPFLAGS: -I/usr/local/opt/opencv@2/include
#For pkg-config to find this software you may need to set:
#    PKG_CONFIG_PATH: /usr/local/opt/opencv@2/lib/pkgconfig

INCL_CV=`pkg-config --cflags opencv`
LIBS_CV=`pkg-config --libs opencv` -ljpeg -ljasper -llcms2 
INCL_GF=`pkg-config --cflags gflags`
LIBS_GF=`pkg-config --libs gflags`

check_path :
	@env | grep ^PATH
	@env | grep INCLUDE
	@env | grep LIBRARY
	#gcc -v
	#g++ -v
	@which gcc
	@which g++

#コンパイルはできたが...
INCL+=${INCL_CV} ${INCL_GF}
LIBS=${LIBS_CV} ${LIBS_GF}
dcrawcv : dcrawcvApp.cpp makefile
	g++ ${FLAGS} ${INCL} -o $@ dcrawcvApp.cpp ${LIBS}
	cp $@ ../bin/

clean : 
	rm -f *.o	
	
gflagtest : gflag.cpp makefile
	g++ ${INCL_GF} -o $@ gflag.cpp ${LIBS_GF}


R_LIB_DIR=/Library/Frameworks/R.framework
R_VER=${R_LIB_DIR}/Versions/3.5/Resources/library
export CPLUS_INCLUDE_PATH=${R_LIB_DIR}/Resources/include:${R_VER}/Rcpp/include:${R_VER}/RInside/include
export LIBRARY_PATH=/usr/local/lib:${R_VER}/RInside/lib
#どちらでもOK?
#CXX=clang++ 
CXX=g++

#環境変数で指定してもOK
#INCL_R+=-I/Library/Frameworks/R.framework/Resources/include 
#INCL_R+=-I/Library/Frameworks/R.framework/Versions/3.5/Resources/library/Rcpp/include 
#INCL_R+=-I/Library/Frameworks/R.framework/Versions/3.5/Resources/library/RInside/include
INCL_R=

LIBS_R=-lRInside -lR

#これでOK
#CXX_FLAG=-Wall -g -O2 -Wall -I/usr/local/include   
CXX_FLAG=-Wall -O3
LD_FLAG=-L/usr/local/lib -F/Library/Frameworks/R.framework/.. -framework R -lpcre -llzma -lbz2 -lz -licucore -lm -liconv  -L/Library/Frameworks/R.framework/Resources/lib -lRblas -L/Library/Frameworks/R.framework/Resources/lib -lRlapack  /Library/Frameworks/R.framework/Versions/3.5/Resources/library/RInside/lib/libRInside.a -o rtest
LD_FLAG=-F/Library/Frameworks/R.framework/.. -framework R -lpcre -llzma -lbz2 -lz -licucore -lm -liconv  -L/Library/Frameworks/R.framework/Resources/lib -lRblas -L/Library/Frameworks/R.framework/Resources/lib -lRlapack  /Library/Frameworks/R.framework/Versions/3.5/Resources/library/RInside/lib/libRInside.a

LD_FLAG=-F/Library/Frameworks/R.framework/.. -framework R
LD_FLAG=-lR
#下二つを外してもOKだった
# -lpcre -llzma -lbz2 -lz -licucore -lm -liconv  -L/Library/Frameworks/R.framework/Resources/lib -lRblas
# -L/Library/Frameworks/R.framework/Resources/lib -lRlapack  
LD_FLAG+=/Library/Frameworks/R.framework/Versions/3.5/Resources/library/RInside/lib/libRInside.a

rtest : makefile ../RInside/standard/rinside_sample0.cpp 
	echo ${INCL_R}
	#g++ ${INCL_R} -o $@ ../RInside/standard/rinside_sample0.cpp ${LIBS_R}
	${CXX} ${INCL_R} -o $@ ${CXX_FLAG} ../RInside/standard/rinside_sample0.cpp ${LD_FLAG}
	# -Xlinker -rpath -Xlinker /R/library/RInside/lib
	
