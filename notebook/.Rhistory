mutate(ISO = case_when(
File == "./DSC_1396.NEF" ~ 100,
File == "./DSC_1404.NEF" ~ 25600,
File == "./DSC_1405.NEF" ~ 51200,
TRUE ~ ISO))
saveRDS(dat, glue("{dir}/{basename}.csv"))
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
csv_file <- glue("{dir0}/{basename}.csv")
dat <- read_csv0(csv_file)
dat <- nest(dat, -File, -ISO, -Exposure) %>%
mutate(ISO = case_when(
File == "./DSC_1396.NEF" ~ 100,
File == "./DSC_1404.NEF" ~ 25600,
File == "./DSC_1405.NEF" ~ 51200,
TRUE ~ ISO))
saveRDS(dat, glue("{dir}/{basename}.rds"))
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
head(dat)
dat[[1,4]]
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
gdat <- dat %>% unnest(data) %>%
gather(Pixel, Value, -File, -ISO, -Exposure, -X, -Y)
gdat <- gdat %>%
group_by(File, ISO, Exposure, Pixel) %>%
nest()
#gdat <- gdat %>% filter(ISO == 400)
to_histogram_data <- function(Value) {
pb$tick()$print()
g <- ggplot() + geom_histogram(aes(Value), binwidth = 1)
hist_data <- layer_data(g) %>% as_tibble()
hist_data <- hist_data %>% transmute(x, count, ncount)
hist_data
}
pb <- progress_estimated(nrow(gdat))
hdat <- gdat %>%
mutate(data = map(data, ~ to_histogram_data(.x$Value)))
saveRDS(hdat, glue("{dir}/{basename}_hdat.rds"))
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map(data,
~ .x %>%
mutate(nx = x) %>%
filter(count > 0) %>%
filter(x > min(x))))
#
#
#                         %>%
#                        arrange(Pixel)))
hdat <- hdat %>% unnest(data)
#hdat <- filter(hdat, x > -1008)
# hdat <- mutate(hdat, nx = x / (ISO / 100))
# hdat <- mutate(hdat, nx = x)
# hdat <- filter(hdat, count >= 10)
# hdat <- arrange(hdat, Pixel)
g <- ggplot(hdat) + geom_point(aes(nx, y = count, color = Pixel))
g <- g + facet_wrap(~ ISO, scale = "free", nrow = 2)
#g <- g + coord_cartesian(xlim = c(-7.5, 7.5))
g <- g + scale_y_log10()
plot(g)
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map2(data, ISO,
~ .x %>%
mutate(nx = x / (ISO / 100)) %>%
filter(count > 0) %>%
filter(x > min(x))))
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map2(data, ISO,
~ .x %>%
mutate(nx = x / (.y / 100)) %>%
filter(count > 0) %>%
filter(x > min(x))))
#
#
#                         %>%
#                        arrange(Pixel)))
hdat <- hdat %>% unnest(data)
#hdat <- filter(hdat, x > -1008)
# hdat <- mutate(hdat, nx = x / (ISO / 100))
# hdat <- mutate(hdat, nx = x)
# hdat <- filter(hdat, count >= 10)
# hdat <- arrange(hdat, Pixel)
g <- ggplot(hdat) + geom_point(aes(nx, y = count, color = Pixel))
g <- g + facet_wrap(~ ISO, scale = "free", nrow = 2)
#g <- g + coord_cartesian(xlim = c(-7.5, 7.5))
g <- g + scale_y_log10()
plot(g)
source("tidyverse.R", encoding = "UTF8")
library(modelr)
dir0 <- "/Volumes/data/Photo/astrophoto/2019/20190622bias_D810A/dat"
dir <- "/ws/notebook/dat"
basename <- "dump_RGrGbB_offset0"
basename <- "dump_RGrGbB"
csv_file <- glue("{dir0}/{basename}.csv")
dat <- read_csv0(csv_file)
dat <- nest(dat, -File, -ISO, -Exposure) %>%
mutate(ISO = case_when(
File == "./DSC_1396.NEF" ~ 100,
File == "./DSC_1404.NEF" ~ 25600,
File == "./DSC_1405.NEF" ~ 51200,
TRUE ~ ISO))
saveRDS(dat, glue("{dir}/{basename}.rds"))
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
gdat <- dat %>% unnest(data) %>%
gather(Pixel, Value, -File, -ISO, -Exposure, -X, -Y)
gdat <- gdat %>%
group_by(File, ISO, Exposure, Pixel) %>%
nest()
#gdat <- gdat %>% filter(ISO == 400)
to_histogram_data <- function(Value) {
pb$tick()$print()
g <- ggplot() + geom_histogram(aes(Value), binwidth = 1)
hist_data <- layer_data(g) %>% as_tibble()
hist_data <- hist_data %>% transmute(x, count, ncount)
hist_data
}
pb <- progress_estimated(nrow(gdat))
hdat <- gdat %>%
mutate(data = map(data, ~ to_histogram_data(.x$Value)))
saveRDS(hdat, glue("{dir}/{basename}_hdat.rds"))
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map2(data, ISO,
~ .x %>%
mutate(nx = x / (.y / 100)) %>%
filter(count > 0) %>%
filter(x > min(x))))
#
#
#                         %>%
#                        arrange(Pixel)))
hdat <- hdat %>% unnest(data)
#hdat <- filter(hdat, x > -1008)
# hdat <- mutate(hdat, nx = x / (ISO / 100))
# hdat <- mutate(hdat, nx = x)
# hdat <- filter(hdat, count >= 10)
# hdat <- arrange(hdat, Pixel)
g <- ggplot(hdat) + geom_point(aes(nx, y = count, color = Pixel))
g <- g + facet_wrap(~ ISO, scale = "free", nrow = 2)
#g <- g + coord_cartesian(xlim = c(-7.5, 7.5))
g <- g + scale_y_log10()
plot(g)
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map2(data, ISO,
~ .x %>%
mutate(nx = x / (.y / 100)) %>%
filter(count > 1) %>%
filter(x > min(x))))
#
#
#                         %>%
#                        arrange(Pixel)))
hdat <- hdat %>% unnest(data)
#hdat <- filter(hdat, x > -1008)
# hdat <- mutate(hdat, nx = x / (ISO / 100))
# hdat <- mutate(hdat, nx = x)
# hdat <- filter(hdat, count >= 10)
# hdat <- arrange(hdat, Pixel)
g <- ggplot(hdat) + geom_point(aes(nx, y = count, color = Pixel))
g <- g + facet_wrap(~ ISO, scale = "free", nrow = 2)
#g <- g + coord_cartesian(xlim = c(-7.5, 7.5))
g <- g + scale_y_log10()
plot(g)
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map2(data, ISO,
~ .x %>%
mutate(nx = x / (.y / 100)) %>%
filter(count > 1) %>%
filter(x > min(x))))
#
#
#                         %>%
#                        arrange(Pixel)))
hdat <- hdat %>% unnest(data)
#hdat <- filter(hdat, x > -1008)
# hdat <- mutate(hdat, nx = x / (ISO / 100))
# hdat <- mutate(hdat, nx = x)
# hdat <- filter(hdat, count >= 10)
# hdat <- arrange(hdat, Pixel)
g <- ggplot(hdat) + geom_point(aes(x, y = count, color = Pixel))
g <- g + facet_wrap(~ ISO, scale = "free", nrow = 2)
#g <- g + coord_cartesian(xlim = c(-7.5, 7.5))
g <- g + scale_y_log10()
plot(g)
dat
mutate(dat, min = map_int(data, ~ min(.x$x)))
mutate(dat, min = map_int(data, ~ min(.x$x)))
mutate(dat, min = map_dbl(data, ~ min(.x$x)))
dat[[1,5]]
dat[[1,4]]
min(dat[[1,4]]$Gr)
mutate(dat, min = map_dbl(data, ~ min(.x$X)))
mutate(dat, min = map_dbl(data, ~ min(.x$R)))
mutate(dat, min = map(data, ~ .x %>% summarise_all(min))
)
mutate(dat, min = map(data, ~ .x %>% summarise_all(min))) %>% unnest(min)
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
head(dat)
mutate(dat, min = map(data, ~ .x %>% summarise_all(min))) %>% unnest(min)
ls
source("tidyverse.R", encoding = "UTF8")
library(modelr)
dir0 <- "/Volumes/data/Photo/astrophoto/2019/20190622bias_D810/dat"
dir <- "/ws/notebook/dat"
basename <- "dump_D810"
csv_file <- glue("{dir0}/{basename}.csv")
dat <- read_csv0(csv_file)
dat <- nest(dat, -File, -ISO, -Exposure) %>%
mutate(ISO = case_when(
File == "./DSC_1386.NEF" ~ 32,
File == "./DSC_1396.NEF" ~ 25600,
File == "./DSC_1397.NEF" ~ 51200,
TRUE ~ ISO))
saveRDS(dat, glue("{dir}/{basename}.rds"))
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
head(dat)
mutate(dat, min = map(data, ~ .x %>% summarise_all(min))) %>% unnest(min)
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
head(dat)
mutate(dat, min = map(data, ~ .x %>% summarise_all(min))) %>% unnest(min)
rds_file <- glue("{dir}/{basename}.rds")
dat <- readRDS(rds_file)
gdat <- dat %>% unnest(data) %>%
gather(Pixel, Value, -File, -ISO, -Exposure, -X, -Y)
gdat <- gdat %>%
group_by(File, ISO, Exposure, Pixel) %>%
nest()
#gdat <- gdat %>% filter(ISO == 400)
to_histogram_data <- function(Value) {
pb$tick()$print()
g <- ggplot() + geom_histogram(aes(Value), binwidth = 1)
hist_data <- layer_data(g) %>% as_tibble()
hist_data <- hist_data %>% transmute(x, count, ncount)
hist_data
}
pb <- progress_estimated(nrow(gdat))
hdat <- gdat %>%
mutate(data = map(data, ~ to_histogram_data(.x$Value)))
saveRDS(hdat, glue("{dir}/{basename}_hdat.rds"))
rds_file <- glue("{dir}/{basename}_hdat.rds")
hdat <- readRDS(rds_file)
hdat <- hdat %>%
mutate(data = map2(data, ISO,
~ .x %>%
mutate(nx = x / (.y / 100)) %>%
filter(count > 1) %>%
filter(x > min(x))))
#
#
#                         %>%
#                        arrange(Pixel)))
hdat <- hdat %>% unnest(data)
#hdat <- filter(hdat, x > -1008)
# hdat <- mutate(hdat, nx = x / (ISO / 100))
# hdat <- mutate(hdat, nx = x)
# hdat <- filter(hdat, count >= 10)
# hdat <- arrange(hdat, Pixel)
g <- ggplot(hdat) + geom_point(aes(x, y = count, color = Pixel))
g <- g + facet_wrap(~ ISO, scale = "free", nrow = 2)
#g <- g + coord_cartesian(xlim = c(-7.5, 7.5))
g <- g + scale_y_log10()
plot(g)
2^-0.2
library(tidyverse)
seeings <- seq(0.5, 2.0, 0.2)
guid_rms <- seq(0.5, 2.0, 0.2)
sigma <- sqrt(seeings^2 + guid_rms^2)
ggplot() + geom_line(aes(seeings, sigma, color = factor(guid_rms)))
seeing <- seq(0.5, 2.0, 0.2)
guid_rms <- seq(0.5, 2.0, 0.2)
sigma <- sqrt(seeings^2 + guid_rms^2)
dat <- tibble(seeing, guid_rms, sigma)
ggplot(dat) + geom_line(aes(seeing, sigma, color = factor(guid_rms)))
dat
dat <- tibble(guid_rms) %>% nest()
dat <- tibble(guid_rms) %>% nest() %>%
mutate(dat = map(guid_rms, ~ tibble(seeing, sigma = sqrt(.x^2 + seeing^2))))
dat <- tibble(guid_rms) %>% nest() %>%
mutate(data = map(guid_rms, ~ tibble(seeing, sigma = sqrt(.x^2 + seeing^2))))
mutate(data = map(guid_rms, ~ tibble(seeing,)) # sigma = sqrt(.x^2 + seeing^2))))
dat <- tibble(guid_rms) %>% nest() %>%
dat <- tibble(guid_rms) %>% nest() %>%
mutate(data = map(guid_rms, ~ tibble(seeing))) # sigma = sqrt(.x^2 + seeing^2))))
dat <- tibble(guid_rms) %>%
mutate(data = map(guide_rms, ~ tibble(seeing))) # sigma = sqrt(.x^2 + seeing^2))))
guide_rms <- seq(0.5, 2.0, 0.2)
dat <- tibble(guid_rms) %>%
mutate(data = map(guide_rms, ~ tibble(seeing))) # sigma = sqrt(.x^2 + seeing^2))))
dat
dat <- tibble(guid_rms) %>%
mutate(data = map(guide_rms, ~ tibble(seeing, sigma = sqrt(seeing ^ 2 + .x ^ 2)))) # sigma = sqrt(.x^2 + seeing^2))))
dat
unnest(dat)
seeing <- seq(0.5, 2.0, 0.2)
guide_rms <- seq(0.5, 2.0, 0.2)
sigma <- sqrt(seeings^2 + guide_rms^2)
dat <- tibble(guid_rms) %>%
mutate(data = map(guide_rms,
~ tibble(seeing, sigma = sqrt(seeing ^ 2 + .x ^ 2)))) %>%
unnest()
ggplot(dat) + geom_line(aes(seeing, sigma, color = factor(guid_rms)))
seeing <- seq(0.5, 2.0, 0.2)
guide_rms <- seq(0.5, 2.0, 0.2)
sigma <- sqrt(seeings^2 + guide_rms^2)
dat <- tibble(guide_rms) %>%
mutate(data = map(guide_rms,
~ tibble(seeing, sigma = sqrt(seeing ^ 2 + .x ^ 2)))) %>%
unnest()
ggplot(dat) + geom_line(aes(seeing, sigma, color = factor(guide_rms)))
install.packages(c("imager", "shiny", "shinythemes"))
shiny::runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
?checkboxGroupInput
?radioButtons
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
array(1:24, c(4,6))
array(1:24, c(4,6)) -> aaa
aaa[1,1]
aaa[seq(1, 4, 2), ] <- 0
aaa
array(1:24, c(4,6)) -> aaa
aaa[seq(1, 4, 2), seq(1, 4, 2)]
aaa[seq(1, 4, 2), seq(1, 6, 2)]
aaa
aaa[seq(1, 4, 2), seq(1 + 1, 6, 2)]
runApp('/ws/Astro/ASApp')
image[index_om, index_om, 3] <- (
bayer[index_om - 1, index_om - 1] +
bayer[index_om - 1, index_om + 1] +
bayer[index_om + 1, index_om - 1] +
bayer[index_om + 1, index_om + 1]) / 4
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/ASApp')
library(tidyverse)
library(imager)
img0 <- load.image("/ws/Astro/ASApp/img//Saturn_HST_2004-03-22.jpg")
img0 <- (img0 / max(img0)) ^ (2.2)
arcsec_pix0 <- 19.43 / 890
#arcsec_pix <- 0.51662
focal_length <- 539
um_pix <- 1.35
arcsec_pix <- 180 / pi * 2 * atan(um_pix / 1000 / 2 / focal_length) * 60 * 60
sim_resolution <- 4
arcsec_pix1 <- arcsec_pix / sim_resolution
sigma_arcsec <- 2.0
sigma_pix1 <- sigma_arcsec / arcsec_pix1
N <- round(sigma_pix1 * 3) * 2
psf <- as.cimg(function(x, y) exp(-((x - N / 2)^2 + (y - N / 2)^2)/(2 * sigma_pix1^2)), N, N)
#rimg00 <- imresize(img0, arcsec_pix0 / arcsec_pix, interpolation = 1)
#plot( rimg00 )
img1 <- imresize(img0, arcsec_pix0 / arcsec_pix1, interpolation = 3)
plot( img1 )
img1_psf_blurred <- convolve(img1, psf)
plot( img1_psf_blurred )
img <- imresize(img1, scale = 1.0 / sim_resolution, interpolation = 1)
plot( img )
img_psf_blurred <- imresize(img1_psf_blurred, scale = 1.0 / sim_resolution, interpolation = 1)
plot( img_psf_blurred )
#Calculation for aperture MTF
img_psf_blurred <- imresize(boxblur(img1_psf_blurred, sim_resolution), scale = 1.0 / sim_resolution, interpolation = 1)
plot( img_psf_blurred )
img0 <- load.image("/ws/Astro/ASApp/img//Saturn_HST_2004-03-22.jpg")
img0 <- (img0 / max(img0)) ^ (2.2)
arcsec_pix0 <- 19.43 / 890
#arcsec_pix <- 0.51662
focal_length <- 539
um_pix <- 1.35
arcsec_pix <- 180 / pi * 2 * atan(um_pix / 1000 / 2 / focal_length) * 60 * 60
sim_resolution <- 4
arcsec_pix1 <- arcsec_pix / sim_resolution
sigma_arcsec <- 2.0
sigma_pix1 <- sigma_arcsec / arcsec_pix1
N <- round(sigma_pix1 * 3) * 2
psf <- as.cimg(function(x, y) exp(-((x - N / 2)^2 + (y - N / 2)^2)/(2 * sigma_pix1^2)), N, N)
#rimg00 <- imresize(img0, arcsec_pix0 / arcsec_pix, interpolation = 1)
#plot( rimg00 )
img1 <- imresize(img0, arcsec_pix0 / arcsec_pix1, interpolation = 3)
plot( img1 )
img1_psf_blurred <- convolve(img1, psf)
plot( img1_psf_blurred )
img <- imresize(img1, scale = 1.0 / sim_resolution, interpolation = 1)
plot( img )
img_psf_blurred <- imresize(img1_psf_blurred, scale = 1.0 / sim_resolution, interpolation = 1)
plot( img_psf_blurred )
#Calculation for aperture MTF
img_psf_blurred <- imresize(boxblur(img1_psf_blurred, sim_resolution), scale = 1.0 / sim_resolution, interpolation = 1)
plot( img_psf_blurred )
img0 <- load.image("/ws/Astro/ASApp/img//Saturn_HST_2004-03-22.jpg")
img0 <- (img0 / max(img0)) ^ (2.2)
arcsec_pix0 <- 19.43 / 890
#arcsec_pix <- 0.51662
focal_length <- 539
um_pix <- 1.35
arcsec_pix <- 180 / pi * 2 * atan(um_pix / 1000 / 2 / focal_length) * 60 * 60
sim_resolution <- 4
arcsec_pix1 <- arcsec_pix / sim_resolution
sigma_arcsec <- 1.0
sigma_pix1 <- sigma_arcsec / arcsec_pix1
N <- round(sigma_pix1 * 3) * 2
psf <- as.cimg(function(x, y) exp(-((x - N / 2)^2 + (y - N / 2)^2)/(2 * sigma_pix1^2)), N, N)
#rimg00 <- imresize(img0, arcsec_pix0 / arcsec_pix, interpolation = 1)
#plot( rimg00 )
img1 <- imresize(img0, arcsec_pix0 / arcsec_pix1, interpolation = 3)
plot( img1 )
img1_psf_blurred <- convolve(img1, psf)
plot( img1_psf_blurred )
img <- imresize(img1, scale = 1.0 / sim_resolution, interpolation = 1)
plot( img )
img_psf_blurred <- imresize(img1_psf_blurred, scale = 1.0 / sim_resolution, interpolation = 1)
plot( img_psf_blurred )
#Calculation for aperture MTF
img_psf_blurred <- imresize(boxblur(img1_psf_blurred, sim_resolution), scale = 1.0 / sim_resolution, interpolation = 1)
plot( img_psf_blurred )
N <- 64
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {r <- sqrt((x - N / 2)^2 + (y - N / 2)^2); besselJ( (pi * r / lambda_um / f_ratio)) }, N, N)
airy <- as.cimg(function(x, y) {r <- sqrt((x - N / 2)^2 + (y - N / 2)^2); besselJ( pi * r / lambda_um / f_ratio), 1) }, N, N)
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
airy
N <- 64
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
plot(airy)
N <- 64
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
plot((airy / max(air))^(2.2))
N <- 64
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
plot((airy / max(airy))^(2.2))
N <- 64
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
plot((airy)^(2.2))
N <- 64
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
plot((airy)^(1 / 2.2))
as.matrix(airy)
N <- 16
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
plot((airy)^(1 / 2.2))
as.matrix(airy)
airy[N/2,N/2]
airy[N/2,N/2] <- 1
N <- 16
lambda_um <- 500 * 10^(-3)
f_ratio <- 8
airy <- as.cimg(function(x, y) {
r <- sqrt((x - N / 2)^2 + (y - N / 2)^2);
xx <- pi * r / lambda_um / f_ratio;
(2 * besselJ( xx, 1) / xx)^2  }, N, N)
airy[N/2,N/2] <- 1
plot((airy)^(1 / 2.2))
as.matrix(airy)
shiny::runApp('/ws/Astro/SaturnSim')
runApp('/ws/Astro/SaturnSim')
runApp('/ws/Astro/ASApp')
runApp('/ws/Astro/SaturnSim')
